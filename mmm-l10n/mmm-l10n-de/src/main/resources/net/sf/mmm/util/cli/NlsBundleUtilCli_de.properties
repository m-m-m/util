infoMainModeDefault = Default
infoMainModeHelp = Hilfe
infoMainModeVersion = Version
messageCliAdditionalOptions = Weitere Optionen:
messageCliArguments = Argumente:
messageCliModeUsage = Modus {mode}:
messageCliRequiredOptions = Erforderliche Optionen:
messageCliUsage = Verwendung: {mainClass} {option}
messageMainModeHelpUsage = Gibt die Hilfe des Programms aus.
messageMainModeVersionUsage = Gibt die Version des Programms aus.
messageMainOptionHelpUsage = Gibt diese Hilfe aus.
messageMainOptionVersionUsage = Gibt die Version aus.
messageSynchronizerUsage = Erzeugt bzw. aktualisiert ResourceBundle Property-Dateien.
messageSynchronizerUsageBundleClass = Die expliziete Liste der Bundle-Klassen zu denen die Property-Dateien zu allen gegebenen Locales generiert bzw. aktualisiert werden sollen. Es muss der vollqualifizierte Name angegeben werden. Wird diese Option ausgelassen, so werden aus allen in META-INF/net.sf.mmm/nls-bundles deklarierten Bundles verwendet.
messageSynchronizerUsageDatePattern = Verwende das angegebene Datumsformat um das Synchronisierungsdatum in Property-Dateien zu schreiben (Voreinstellung ist "{default}").
messageSynchronizerUsageEncoding = Lese und Schreibe Property-Dateien mit dem angegebenen Encoding {operand}. Die Voreinstellung ist {default} und sollte von normalen Anwendern nicht geändert werden.
messageSynchronizerUsageLocales = Die Liste der zu synchronisierenden Locales. Jede Locale muss in der Form "ll[_CC[_vv]]" angegeben werden, wobei "ll" der ISO 639 Code in Kleinbuchstaben, CC der ISO 3166 2-letter Code in Großbuchstaben und vv eine beliebige Variante ist. Beispiele sind "de", "en_US" oder "th_TH_TH".
messageSynchronizerUsageModeDefault = Erzeugt bzw. aktualisiert ResourceBundle Property-Dateien zu <bundle-class> für die gegebenen Locales. Beispiel:\n\n{mainClass} --bundle-class foo.bar.NlsBundleMyExample de de_DE en en_US en_GB fr zh ja_JP zh_TW\n\nFür jede Locale wird im Basisverzeichnis eine Property-Datei foo/bar/NlsBundleMyExample_<locale>.properties erzeugt bzw. aktualisiert. In jeder Property-Datei werden alle Properties aus <bundle-class> erzeugt. Als Wert wird der original Text ergänzt mit einem TODO-Präfix verwendet. Wenn die Property-Datei bereits existiert, werden alle bestehenden Properties und Kommentare beibehalten und nur Neue ergänzt.
messageSynchronizerUsagePath = Schreibe Property-Dateien ins Basisverzeichnis {operand} (Voreinstellung ist "{default}").
errorCliArgumentMissing = Das Argument "{argument}" ist erforderlich für den Modus "{mode}"!
errorCliArgumentReferenceMissing = Das von "{reference}" referenzierte Argument "{argument}" ist undefiniert!
errorCliClassNoProperty = Die CLI-Klasse "{type}" ist unzulässig, da sie keine mit @CliOption oder @CliArgument annotierte Property hat!
errorCliOptionDuplicate = Doppelte Option "{option}"!
errorCliOptionUndefined = Undefinierte Operation "{option}"!
errorCliOptionMisplaced = Die Option "{option}" ist deplatziert und darf nicht nach den Argumenten angegeben werden!
errorCliOptionMissing = Die Option "{option}" ist für den Modus "{mode}" erforderlich!
errorCliOptionMissingValue = Auf die Option "{option}" muss ein Wert folgen!
errorCliOptionNameIllegal = Der Name oder Alias "{name}" von "{option}" ist unzulässig!
errorCliParser = Die Klasse "{type}" ist ein ungültiges Kommandozeilen Status-Objekt!
errorCliOptionAndArgumentAnnotation = Die Property "{property}" darf nicht sowohl mit @CliOption als auch mit @CliArgument annotiert sein!
errorCliParameterListEmpty = Sie müssen wenigstens einen Kommandozeilen Parameter angeben.
errorCliOptionIncompatibleModes = Die Optionen "{option1}" und "{option2}" haben einen inkompatiblen Modus und können nicht zusammen verwendet werden!
errorCliModeUndefined = Der von "{value}" verwendete Modus "{mode}" ist undefiniert! Sie müssen ihn via @CliMode deklarieren oder @CliStyle.modeUndefined() auf einem anderen Wert als EXCEPTION setzten.
